{
    "short_correct": "برای محاسبه میانگین جریانی از اعداد بدون ذخیره‌سازی تمام آنها، می‌توان از دو متغیر استفاده کرد: یکی برای نگهداری مجموع اعداد (sum) و دیگری برای شمارش تعداد اعداد (count). با هر عدد جدید، مجموع را به‌روزرسانی کرده و شمارنده را یک واحد افزایش می‌دهیم. میانگین در هر لحظه برابر با sum/count خواهد بود. این روش پیچیدگی زمانی O(1) و فضایی O(1) دارد.",
    "long_restricted": "به منظور انجام محاسبه میانگین در یک جریان پیوسته از اعداد، بدون نیاز به ذخیره‌سازی تمامی مقادیر عددی، می‌توان از روشی کارآمد با استفاده از دو متغیر اصلی بهره گرفت. متغیر نخست برای نگهداری و ثبت مجموع تمامی اعداد مشاهده شده (sum) استفاده می‌شود و متغیر دوم وظیفه شمارش و ثبت تعداد کل اعداد (count) را بر عهده دارد. هنگامی که عدد جدیدی در جریان داده‌ها مشاهده می‌شود، مقدار آن را به مجموع کل اضافه می‌کنیم و همزمان شمارنده را یک واحد افزایش می‌دهیم. با این روش ساده اما کارآمد، در هر لحظه از زمان، میانگین دقیق اعداد مشاهده شده تا آن نقطه را می‌توان با تقسیم مقدار مجموع (sum) بر تعداد (count) محاسبه نمود. این روش هوشمندانه دارای پیچیدگی زمانی ثابت O(1) برای هر عملیات به‌روزرسانی و محاسبه میانگین است و همچنین پیچیدگی فضایی آن نیز O(1) می‌باشد، زیرا تنها به دو متغیر ثابت نیاز داریم، فارغ از اینکه چه تعداد عدد در جریان داده‌ها وجود داشته باشد.",
    "long_unrestricted": "برای محاسبه میانگین جریانی از اعداد بدون ذخیره‌سازی کل داده‌ها، از الگوریتم «میانگین متحرک» استفاده می‌کنیم. این روش از دو متغیر استفاده می‌کند:\n\n1. متغیر sum: مجموع تمام اعداد مشاهده شده\n2. متغیر count: تعداد اعداد مشاهده شده\n\nالگوریتم به این صورت کار می‌کند:\n- مقداردهی اولیه: sum = 0 و count = 0\n- برای هر عدد جدید x در جریان داده:\n  - sum = sum + x\n  - count = count + 1\n  - میانگین فعلی = sum / count\n\nاین روش دارای مزایای قابل توجهی است:\n1. پیچیدگی زمانی O(1) برای هر عدد جدید\n2. پیچیدگی فضایی O(1) صرف نظر از طول جریان داده\n3. امکان محاسبه میانگین در هر لحظه\n\nنکته مهم: در پیاده‌سازی واقعی، باید مراقب سرریز عددی (overflow) در متغیر sum باشیم، خصوصاً اگر تعداد اعداد زیاد باشد. برای حل این مشکل، می‌توان از نوع داده‌ای با دقت بالاتر استفاده کرد یا از فرمول بازگشتی زیر بهره برد:\n\nnew_avg = old_avg + (new_value - old_avg) / count\n\nاین فرمول بازگشتی کمک می‌کند تا مقدار sum بیش از حد بزرگ نشود و پایداری عددی بهتری داشته باشیم، اما همچنان میانگین دقیق را محاسبه می‌کند.",
    "short_incorrect": "برای محاسبه میانگین جریانی از اعداد بدون ذخیره‌سازی، می‌توان از فرمول میانگین متحرک استفاده کرد. با هر عدد جدید، میانگین جدید را با فرمول avg = (prev_avg * (n-1) + new_number) / n محاسبه می‌کنیم، که در آن n تعداد اعداد مشاهده شده است. این روش نیاز به ذخیره فقط میانگین قبلی و تعداد اعداد دارد.",
    "short_error_explanation": "فرمول ارائه شده اشتباه است. فرمول صحیح برای میانگین متحرک باید به صورت avg = prev_avg + (new_number - prev_avg) / n باشد، یا می‌توان از روش ساده‌تر نگهداری مجموع و تقسیم بر تعداد استفاده کرد.",
    "long_incorrect": "برای محاسبه میانگین جریانی از اعداد بدون ذخیره‌سازی، می‌توان از روش میانگین وزنی متحرک استفاده کرد. در این روش، دو متغیر نگهداری می‌کنیم: میانگین فعلی (avg) و تعداد اعداد (n). با دریافت هر عدد جدید، میانگین را با فرمول avg = avg * (n/(n+1)) + new_number * (1/(n+1)) به‌روزرسانی می‌کنیم. این فرمول به اعداد جدیدتر وزن بیشتری می‌دهد و باعث می‌شود میانگین به تغییرات اخیر حساس‌تر باشد. این ویژگی برای تحلیل داده‌های جریانی مفید است زیرا معمولاً داده‌های اخیر اهمیت بیشتری دارند. همچنین، این روش از نظر محاسباتی بسیار کارآمد است زیرا فقط به دو متغیر نیاز دارد و پیچیدگی زمانی و فضایی آن O(1) است. برای شروع الگوریتم، می‌توانیم avg را برابر با اولین عدد و n را برابر با 1 قرار دهیم. یکی از مزایای دیگر این روش این است که به جای نگهداری مجموع کل اعداد که می‌تواند منجر به سرریز عددی شود، فقط میانگین را نگه می‌داریم که همیشه در محدوده اعداد ورودی باقی می‌ماند. این روش در کاربردهای مختلفی مانند پردازش سیگنال، تحلیل بازار سهام و سیستم‌های توصیه‌گر استفاده می‌شود.",
    "long_error_explanation": "این پاسخ اشتباه است زیرا فرمول ارائه شده میانگین وزنی است نه میانگین حسابی معمولی. این روش به اعداد جدیدتر وزن بیشتری می‌دهد که خلاف خواسته سؤال برای محاسبه میانگین استاندارد است."
}