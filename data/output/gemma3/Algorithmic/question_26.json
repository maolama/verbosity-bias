{
    "short_correct": "برای بررسی تعداد یکسان پرانتزهای باز و بسته با یک متغیر صحیح، می‌توان ابتدا متغیر را صفر قرار داد. سپس، برای هر پرانتز باز، متغیر را یک واحد افزایش و برای هر پرانتز بسته، یک واحد کاهش داد. در نهایت، اگر مقدار متغیر صفر باشد، تعداد پرانتزهای باز و بسته یکسان است.",
    "long_restricted": "بررسی برابری تعداد پرانتزهای باز و بسته را می‌توان با استفاده از تنها یک متغیر صحیح انجام داد. این متغیر را در ابتدا با مقدار صفر مقداردهی می‌کنیم. سپس، در حین پیمایش رشته‌ی پرانتزی، هرگاه با یک پرانتز باز مواجه شویم، مقدار این متغیر را یک واحد افزایش می‌دهیم و هرگاه با یک پرانتز بسته مواجه شویم، مقدار آن را یک واحد کاهش می‌دهیم. پس از اتمام پیمایش رشته، اگر مقدار متغیر نهایی صفر باشد، به این معنی است که تعداد پرانتزهای باز و بسته در رشته یکسان است. در غیر این صورت، تعداد آن‌ها با یکدیگر برابر نیست.",
    "long_unrestricted": "استفاده از یک متغیر برای شمارش پرانتزها یک روش ساده و کارآمد برای بررسی تعداد یکسان بودن پرانتزهای باز و بسته است. این رویکرد به دلیل مصرف حافظه کم و سرعت بالا، در بسیاری از کاربردها مورد استفاده قرار می‌گیرد. می‌توان این متغیر را به عنوان یک 'شمارنده تراز' در نظر گرفت. هر پرانتز باز باعث افزایش تراز می‌شود و هر پرانتز بسته باعث کاهش آن. اگر در نهایت تراز صفر باشد، به این معنی است که تعداد پرانتزهای باز و بسته برابر است. این روش می‌تواند به عنوان یک مرحله پیش‌پردازش قبل از بررسی توازن کامل پرانتزها نیز استفاده شود. اگر تعداد پرانتزها برابر نباشد، نیازی به بررسی توازن نیست.",
    "short_incorrect": "برای بررسی تعداد یکسان پرانتزهای باز و بسته با یک متغیر صحیح، متغیر را صفر قرار داده و برای هر پرانتز باز مقدار متغیر را یک واحد افزایش می‌دهیم. در پایان، اگر متغیر بزرگتر از صفر باشد، تعداد پرانتزهای باز و بسته یکسان است.",
    "short_error_explanation": "این روش فقط تعداد پرانتزهای باز را بررسی می کند و پرانتزهای بسته را نادیده می گیرد. اگر تعداد پرانتزهای بسته بیشتر باشد، متغیر همچنان بزرگتر از صفر خواهد بود، اما تعداد پرانتزها برابر نیست.",
    "long_incorrect": "بررسی تعداد یکسان پرانتزهای باز و بسته با استفاده از یک متغیر صحیح بسیار ساده است. ابتدا متغیر را با مقدار صفر مقداردهی می‌کنیم. سپس در طول پیمایش رشته، هر بار که با یک پرانتز باز مواجه شدیم، مقدار متغیر را یک واحد افزایش می‌دهیم. پس از اتمام پیمایش، اگر مقدار متغیر بزرگتر از صفر باشد، می‌توانیم نتیجه بگیریم که تعداد پرانتزهای باز و بسته در رشته یکسان است. این روش به دلیل سادگی و سرعت خود، بسیار کاربردی است و نیازی به استفاده از ساختارهای داده پیچیده مانند پشته ندارد. این روش به خوبی تعداد پرانتزهای باز را محاسبه می‌کند و با مقایسه آن با صفر، می‌تواند توازن را تشخیص دهد.",
    "long_error_explanation": "این روش پرانتزهای بسته را در نظر نمی‌گیرد. اگر تعداد پرانتزهای بسته بیشتر از باز باشد، متغیر همچنان مثبت خواهد ماند و نتیجه نادرستی ارائه می‌شود. مقایسه با صفر تنها تعداد پرانتزهای باز را بررسی می‌کند."
}