{
    "short_correct": "برای مرتب‌سازی یک لیست اعداد بدون استفاده از توابع آماده، می‌توان از الگوریتم‌های مرتب‌سازی مانند مرتب‌سازی حبابی، مرتب‌سازی درجی، مرتب‌سازی انتخابی، مرتب‌سازی ادغامی یا مرتب‌سازی سریع استفاده کرد. در مرتب‌سازی حبابی، عناصر مجاور مقایسه و در صورت نیاز جابجا می‌شوند. این فرآیند تا زمانی که لیست مرتب شود تکرار می‌گردد.",
    "long_restricted": "برای انجام مرتب‌سازی یک مجموعه از اعداد بدون بهره‌گیری از توابع مرتب‌سازی از پیش تعریف شده، می‌توان از روش‌های الگوریتمی متعددی بهره گرفت. این الگوریتم‌ها شامل مرتب‌سازی حبابی، مرتب‌سازی درجی، مرتب‌سازی انتخابی، مرتب‌سازی ادغامی و همچنین مرتب‌سازی سریع می‌باشند. در روش مرتب‌سازی حبابی که یکی از ساده‌ترین این روش‌هاست، فرآیند مقایسه بین عناصر مجاور صورت می‌پذیرد و چنانچه ترتیب آنها صحیح نباشد، جابجایی انجام می‌شود. این عملیات مقایسه و تعویض به صورت مکرر ادامه پیدا می‌کند تا زمانی که تمامی عناصر در جایگاه صحیح خود قرار گیرند و لیست به طور کامل مرتب گردد. در واقع، در هر بار پیمایش لیست، بزرگترین عنصر باقی‌مانده به انتهای بخش مرتب نشده منتقل می‌شود، درست مانند حباب‌هایی که در آب به سمت بالا حرکت می‌کنند. این فرآیند تا زمانی تکرار می‌شود که دیگر هیچ جابجایی در لیست صورت نگیرد و لیست به طور کامل مرتب شده باشد.",
    "long_unrestricted": "برای مرتب‌سازی یک لیست اعداد بدون استفاده از توابع آماده، می‌توان از الگوریتم‌های مختلفی استفاده کرد. مرتب‌سازی حبابی (Bubble Sort) ساده‌ترین روش است که در آن با مقایسه‌ی جفت‌های مجاور و جابجایی آنها در صورت نیاز، بزرگترین عناصر به انتهای لیست «حباب‌وار» حرکت می‌کنند. پیچیدگی زمانی آن O(n²) است که برای لیست‌های بزرگ کارآمد نیست. مرتب‌سازی درجی (Insertion Sort) عناصر را یکی‌یکی برداشته و در جایگاه مناسب خود قرار می‌دهد، مشابه مرتب کردن کارت‌های بازی در دست. مرتب‌سازی انتخابی (Selection Sort) در هر مرحله کوچکترین عنصر باقیمانده را پیدا کرده و در ابتدای بخش مرتب‌نشده قرار می‌دهد. برای لیست‌های بزرگتر، الگوریتم‌های کارآمدتری مانند مرتب‌سازی ادغامی (Merge Sort) با پیچیدگی O(n log n) توصیه می‌شود که از تکنیک تقسیم و حل استفاده می‌کند. مرتب‌سازی سریع (Quick Sort) نیز با انتخاب یک عنصر محور و تقسیم لیست به دو بخش کوچکتر و بزرگتر از محور، به طور میانگین عملکرد خوبی دارد. انتخاب الگوریتم مناسب به اندازه داده‌ها، میزان مرتب بودن اولیه و محدودیت‌های حافظه بستگی دارد.",
    "short_incorrect": "برای مرتب‌سازی یک لیست اعداد بدون استفاده از توابع آماده، می‌توان از الگوریتم‌های مرتب‌سازی مانند مرتب‌سازی حبابی استفاده کرد. در این روش، هر عنصر با تمام عناصر دیگر مقایسه می‌شود و این فرآیند فقط یک بار انجام می‌شود. پیچیدگی زمانی این الگوریتم O(n) است و برای همه انواع داده‌ها بهترین گزینه محسوب می‌شود.",
    "short_error_explanation": "توضیح نادرست است. در مرتب‌سازی حبابی، عناصر مجاور (نه همه با هم) مقایسه می‌شوند و این فرآیند چندین بار تکرار می‌شود. پیچیدگی زمانی آن O(n²) است، نه O(n)، و برای همه انواع داده‌ها بهترین گزینه نیست.",
    "long_incorrect": "برای مرتب‌سازی یک لیست اعداد بدون استفاده از توابع آماده، می‌توان از الگوریتم‌های مختلفی استفاده کرد. مرتب‌سازی حبابی ساده‌ترین روش است که در آن هر عنصر با عناصر مجاور مقایسه می‌شود. این الگوریتم دارای پیچیدگی زمانی O(n log n) است و در تمام حالات عملکرد یکسانی دارد. مرتب‌سازی درجی روش دیگری است که عناصر را یکی‌یکی در جای مناسب خود قرار می‌دهد و برای داده‌های نزدیک به مرتب، سریع‌تر از همه الگوریتم‌های دیگر عمل می‌کند. مرتب‌سازی ادغامی با استفاده از تکنیک تقسیم و حل، لیست را به زیرلیست‌های کوچکتر تقسیم می‌کند. این روش برای لیست‌های بزرگ مناسب است و پیچیدگی فضایی آن O(1) است، یعنی به حافظه اضافی نیاز ندارد. مرتب‌سازی سریع یکی از پرکاربردترین الگوریتم‌هاست که با انتخاب یک عنصر محور، لیست را به دو بخش تقسیم می‌کند. این الگوریتم در بدترین حالت دارای پیچیدگی O(n) است و همیشه از مرتب‌سازی ادغامی سریع‌تر عمل می‌کند. برای لیست‌های کوچک (کمتر از ۱۰ عنصر)، معمولاً مرتب‌سازی شمارشی توصیه می‌شود که در آن تعداد تکرار هر عنصر شمارش می‌شود.",
    "long_error_explanation": "این پاسخ چندین خطای فنی دارد: پیچیدگی مرتب‌سازی حبابی O(n²) است نه O(n log n)، مرتب‌سازی ادغامی نیاز به حافظه اضافی O(n) دارد نه O(1)، و پیچیدگی مرتب‌سازی سریع در بدترین حالت O(n²) است نه O(n)."
}