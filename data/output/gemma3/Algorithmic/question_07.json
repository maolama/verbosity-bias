{
    "short_correct": "برای معکوس کردن ترتیب آیتم‌ها در یک مجموعه، می‌توان از یک حلقه از ابتدا تا میانه مجموعه استفاده کرد. در هر تکرار، عنصر اول و آخر را با هم جابجا می‌کنیم و سپس شاخص‌ها را به سمت مرکز حرکت می‌دهیم. این فرآیند تا زمانی که شاخص‌ها از هم عبور کنند ادامه می‌یابد. این روش نیازی به استفاده از توابع آماده معکوس‌کننده ندارد و به صورت in-place عمل می‌کند.",
    "long_restricted": "برای معکوس کردن ترتیب عناصر یک مجموعه، مانند یک لیست از نام‌ها، می‌توان یک حلقه را از ابتدای مجموعه تا میانه آن اجرا کرد. در هر مرحله از این حلقه، عنصر واقع در ابتدای مجموعه و عنصر واقع در انتهای مجموعه با یکدیگر جابجا می‌شوند. سپس، شاخص‌ها به سمت مرکز مجموعه حرکت می‌کنند. این فرآیند جابجایی و حرکت شاخص‌ها تا زمانی ادامه می‌یابد که شاخص‌ها از یکدیگر عبور کنند. این روش، بدون نیاز به استفاده از توابع آماده معکوس‌کننده، ترتیب عناصر را به صورت in-place تغییر می‌دهد. به این معنی که نیازی به ایجاد یک مجموعه جدید برای ذخیره عناصر معکوس شده نیست.",
    "long_unrestricted": "معکوس کردن ترتیب عناصر یک مجموعه، یک عملیات رایج در علوم کامپیوتر است. روش‌های مختلفی برای انجام این کار وجود دارد، اما یکی از ساده‌ترین و کارآمدترین روش‌ها استفاده از یک حلقه و جابجایی عناصر است. در این روش، یک حلقه از ابتدای مجموعه تا میانه آن اجرا می‌شود. در هر تکرار حلقه، عنصر واقع در ابتدای مجموعه با عنصر واقع در انتهای مجموعه جابجا می‌شود. سپس، شاخص‌ها به سمت مرکز مجموعه حرکت می‌کنند. این فرآیند تا زمانی ادامه می‌یابد که شاخص‌ها از یکدیگر عبور کنند. این روش به دلیل سادگی و کارایی بالا، به طور گسترده‌ای مورد استفاده قرار می‌گیرد. همچنین، این روش به صورت in-place عمل می‌کند، به این معنی که نیازی به ایجاد یک مجموعه جدید برای ذخیره عناصر معکوس شده نیست و در نتیجه، مصرف حافظه را کاهش می‌دهد. این ویژگی در کار با مجموعه‌های بزرگ بسیار مهم است.",
    "short_incorrect": "برای معکوس کردن یک لیست، می‌توان از یک حلقه از ابتدا تا انتها استفاده کرد و در هر تکرار، عنصر فعلی را با عنصر بعدی جابجا کرد. این کار باعث می‌شود لیست به طور کامل معکوس شود. این روش بسیار ساده و کارآمد است و نیازی به توابع آماده ندارد.",
    "short_error_explanation": "این روش فقط عناصر مجاور را جابجا می‌کند و ترتیب کلی لیست را به درستی معکوس نمی‌کند. جابجایی عناصر مجاور به صورت متوالی، منجر به یک لیست با ترتیب تصادفی می‌شود.",
    "long_incorrect": "برای معکوس کردن ترتیب عناصر یک لیست، می‌توان از یک حلقه استفاده کرد که از ابتدای لیست تا انتهای آن حرکت می‌کند. در هر تکرار حلقه، عنصر فعلی را با عنصر بعدی در لیست جابجا می‌کنیم. این کار به این صورت انجام می‌شود که مقدار عنصر فعلی را در یک متغیر موقت ذخیره می‌کنیم، سپس مقدار عنصر بعدی را در جای عنصر فعلی قرار می‌دهیم و در نهایت مقدار متغیر موقت را در جای عنصر بعدی قرار می‌دهیم. این فرآیند را برای تمام عناصر لیست تکرار می‌کنیم. این روش بسیار ساده و قابل فهم است و نیازی به استفاده از توابع آماده معکوس‌کننده ندارد. با این حال، ممکن است در لیست‌های بسیار بزرگ، کارایی این روش نسبت به روش‌های دیگر کمتر باشد.",
    "long_error_explanation": "این الگوریتم فقط عناصر مجاور را جابجا می‌کند و ترتیب کلی لیست را به درستی معکوس نمی‌کند. جابجایی متوالی عناصر مجاور، منجر به یک لیست با ترتیب تصادفی می‌شود و نه معکوس شده."
}