{
    "short_correct": "برای بررسی وجود یک عدد صحیح x در یک لیست مرتب، می‌توان از جستجوی دودویی استفاده کرد. این الگوریتم لیست را به طور مکرر به دو نیمه تقسیم می‌کند و بررسی می‌کند که آیا x در نیمه چپ یا راست قرار دارد. اگر x در لیست وجود داشته باشد، الگوریتم آن را پیدا خواهد کرد، در غیر این صورت، پس از اتمام تقسیم‌بندی‌ها، مشخص می‌شود که x در لیست وجود ندارد.",
    "long_restricted": "به منظور بررسی وجود یک عدد صحیح مشخص، x، در یک لیست مرتب شده، می‌توان از روش جستجوی دودویی بهره برد. این الگوریتم با تقسیم مکرر لیست به دو نیمه آغاز می‌شود. در هر مرحله، مقدار x با عنصر میانی هر نیمه مقایسه می‌گردد. اگر مقدار x با عنصر میانی برابر بود، جستجو با موفقیت به پایان می‌رسد. در غیر این صورت، بسته به اینکه مقدار x کوچکتر یا بزرگتر از عنصر میانی باشد، جستجو در نیمه چپ یا راست لیست ادامه می‌یابد. این فرآیند تقسیم و مقایسه به طور مکرر تکرار می‌شود تا زمانی که x پیدا شود یا لیست به یک عنصر برسد. در صورتی که x در لیست وجود نداشته باشد، پس از اتمام تقسیم‌بندی‌ها، نتیجه مشخص خواهد شد.",
    "long_unrestricted": "جستجوی دودویی یک الگوریتم بسیار کارآمد برای یافتن یک عنصر در یک لیست مرتب شده است. این الگوریتم با تقسیم مکرر لیست به دو نیمه و مقایسه عنصر مورد نظر با عنصر میانی هر نیمه کار می‌کند. پیچیدگی زمانی جستجوی دودویی O(log n) است، که در آن n تعداد عناصر لیست است. این بدان معناست که زمان جستجو با افزایش تعداد عناصر لیست به طور لگاریتمی افزایش می‌یابد. جستجوی دودویی به طور قابل توجهی سریعتر از جستجوی خطی است، به خصوص برای لیست‌های بزرگ. این الگوریتم در بسیاری از کاربردها، مانند پایگاه‌های داده و کتابخانه‌های جستجو، مورد استفاده قرار می‌گیرد. برای اینکه جستجوی دودویی به درستی کار کند، لیست باید مرتب شده باشد.",
    "short_incorrect": "برای بررسی وجود x در لیست مرتب، می‌توان تمام عناصر لیست را با x مقایسه کرد. اگر x با یکی از عناصر برابر بود، x در لیست وجود دارد. این روش ساده و قابل‌فهم است و همیشه جواب درست را می‌دهد.",
    "short_error_explanation": "مقایسه تک‌تک عناصر لیست با x (جستجوی خطی) برای لیست‌های مرتب ناکارآمد است. جستجوی دودویی به مراتب سریع‌تر است و پیچیدگی زمانی کمتری دارد.",
    "long_incorrect": "برای بررسی وجود یک عدد صحیح x در یک لیست مرتب شده، ساده‌ترین راه این است که از ابتدای لیست شروع کنیم و هر عنصر را به ترتیب با x مقایسه کنیم. اگر در هر مرحله عنصر فعلی برابر با x بود، می‌توانیم نتیجه‌گیری کنیم که x در لیست وجود دارد و جستجو را متوقف می‌کنیم. اگر به انتهای لیست رسیدیم و x را پیدا نکردیم، به این معنی است که x در لیست وجود ندارد. این روش بسیار آسان برای پیاده‌سازی است و نیاز به هیچ الگوریتم پیچیده‌ای ندارد. با این حال، ممکن است برای لیست‌های بزرگ، زمان زیادی طول بکشد، زیرا باید تمام عناصر را بررسی کنیم تا زمانی که x پیدا شود یا به انتهای لیست برسیم. این روش برای لیست‌های کوچک یا زمانی که نیاز به یافتن اولین رخداد x در لیست داریم، مناسب است.",
    "long_error_explanation": "جستجوی خطی در یک لیست مرتب شده، روشی غیربهینه است. با استفاده از جستجوی دودویی می‌توان به طور قابل توجهی سرعت جستجو را افزایش داد. توصیف این روش به عنوان 'آسان برای پیاده‌سازی' و 'مناسب برای لیست‌های کوچک' گمراه کننده است، زیرا جستجوی دودویی نیز به سادگی قابل پیاده‌سازی است و در هر اندازه لیستی کارآمدتر است."
}